// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  // referentialIntegrity = "prisma"
  relationMode = "prisma"
}


// Here my inquiry table... not a good name :( but it's from the tutorial
model Inquiry {
  id      Int   @default(autoincrement()) @id
  name    String
  family   String
  age Int
  mythic Boolean?
  select Boolean?
}

////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// TRY TO CREATE AUTHENTIFICATION SESSION... but fail
/////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
model User {
    id            String    @id @default(cuid())
    first_name    String?
    family_name   String?
    role          String?   @default("visitor")
    pseudo        String?
    email         String?   @unique
    password      String?
    emailVerified DateTime?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    // accounts      Account[]
    // sessions      Session[]
}


// model VerificationToken {
//     identifier String
//     token      String   @unique
//     expires    DateTime

//     @@unique([identifier, token])
// }


// model Account {
//     id                       String   @id @default(cuid())
//     createdAt                DateTime @default(now())
//     updatedAt                DateTime @updatedAt
//     userId                   String
//     type                     String
//     provider                 String
//     providerAccountId        String
//     refresh_token            String? @db.VarChar(500)
//     access_token             String? @db.VarChar(500)
//     refresh_token_expires_in Int?
//     expires_at               Int?
//     token_type               String?
//     scope                    String?
//     id_token                 String? @db.Text
//     session_state            String?
//     oauth_token_secret       String?
//     oauth_token              String?

//     user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//     @@unique([provider, providerAccountId])
// }

// model Session {
//     id           String   @id @default(cuid())
//     sessionToken String   @unique
//     expires      DateTime
//     user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
//     userId       String?
// }